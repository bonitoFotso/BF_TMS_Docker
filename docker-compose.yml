version: "3.7"

services:
  django:
    build: ./backend
    container_name: dev-django
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    volumes:
      - ./backend:/srv/app
      - ./backend/db.sqlite3:/srv/app/db.sqlite3  # Ajout du volume pour la base de donn√©es SQLite
      - static:/srv/app/static
      - media:/srv/app/media
    depends_on:
      - db
    networks:
      - backend-network

  react:
    build: ./frontend
    container_name: dev-react
    command: npm start
    ports:
      - "3000:3000"
    env_file:
      - ./.env.dev
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/srv/app
      - /srv/app/node_modules
    depends_on:
      - django
    networks:
      - backend-network

  db:
    image: postgres:15.2-alpine
    container_name: dev-db
    ports:
      - "5432:5432"
    env_file: ./.env.dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

  nginx:
    build: ./nginx
    container_name: dev-nginx
    ports:
      - "8080:80"
    restart: always
    volumes:
      - static:/srv/app/static
      - media:/srv/app/media
    depends_on:
      - django
      - react
      - db
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data:
  media:
  static:
